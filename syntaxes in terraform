#syntax for creating  resources:

resource " what type of resource" "name-our-resource-our- wish" {}

#syntax for creating variables

variable "name-of-your-variable"{
    default = "default-value" # we can overide the values
}

# syntax for refering variables
  var.name-of-your-variables #this syntax will refer the variables

# syntax for output
 # terraform o/p is used to get information for 1 resource as o/p and provide i/p as another resource.
  output "name-of-your-variable"{
    value= aws_instance.name-our-resource.id #to get instance id
    value= aws_instance.name-our-resource.private_ip # to get private ip
    value= aws_instance.name-our-resource.public_ip # to get public ip 
  }
# condition syntaxes
expression ? "true statement": "false statement"

# locals:- In locals we can keep both functions and expressions and we can use them.
# In locals count.index is not work
locals
{

}



DATA-SOUCE:-

It is used to get data from dynamically from providers